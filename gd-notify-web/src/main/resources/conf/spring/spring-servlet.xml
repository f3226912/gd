<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://cxf.apache.org/core"
	xmlns:p="http://cxf.apache.org/policy"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   	http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
   	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
   	http://cxf.apache.org/policy http://cxf.apache.org/schemas/policy.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
   	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
   	http://cxf.apache.org/bindings/soap http://cxf.apache.org/schemas/configuration/soap.xsd
   	  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
   	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
   	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
   	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- aop拦截日志 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> <aop:config> <aop:aspect
		id="TestAspect" ref="aspectBean"> 配置com.spring.service包下所有类或接口的所有方法 <aop:aspectj-autoproxy
		proxy-target-class="true" /> <aop:pointcut id="businessService" expression="execution(*
		com.gudeng.sample.web.controller.*.*.*(..))" /> <aop:before pointcut-ref="businessService"
		method="doBefore" /> <aop:after pointcut-ref="businessService" method="doAfter"/>
		<aop:around pointcut-ref="businessService" method="doAround"/> <aop:after-returning
		pointcut-ref="businessService" method="afterReturning" returning="returnValue"
		/> <aop:after-throwing pointcut-ref="businessService" method="doThrowing"
		throwing="ex"/> </aop:aspect> </aop:config> <bean id="aspectBean" class="com.gudeng.sample.aop.Aspect"
		/> -->

	<context:component-scan base-package="*" />

	<mvc:annotation-driven conversion-service="conversionService">
	    <mvc:message-converters>
			<!-- 解决注解@ResponseBody返回String类型出现中文乱码问题 -->
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	            <property name="supportedMediaTypes">
	                <list>
	                    <value>text/plain;charset=UTF-8</value>
	                    <value>text/html;charset=UTF-8</value>
	                </list>
	            </property>
	        </bean>
    	</mvc:message-converters>
	</mvc:annotation-driven>
	<!--===================== view resovler ===================== -->
	<bean id="viewResolver" abstract="true">
		<property name="attributes">
			<props>
				<prop key="resRoot">@{resRoot}</prop>
				<prop key="uaaResRoot">@{uaaResRoot}</prop>
				<prop key="minSuffix">@{minSuffix}</prop>
				<prop key="appVersion">@{appVersion}</prop>
				<prop key="imgHost">@{imgHost}</prop>
				<prop key="imgHostUrl">@{imgHostUrl}</prop>
				<prop key="imgHostTag">@{imgHostTag}</prop>
				<prop key="imgHostNumber">@{imgHostNumber}</prop>
			</props>
		</property>
	</bean>

	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="com.gudeng.commerce.gd.notify.converter.LongProertyEditor"></bean>

		</property>
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="mappingJacksonHttpMessageConverter" />
			</util:list>
		</property>
	</bean>

	<bean id="jstlViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		parent="viewResolver">
		<property name="order" value="2" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>



	<!-- Jackson json 配置 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 类型转换支持 -->
	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.gudeng.commerce.gd.notify.converter.StringDateConverter" />
				<bean class="com.gudeng.commerce.gd.notify.converter.DateStringConverter" />
			</list>
		</property>
	</bean>
	<bean id="webPropertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/main-setting-web.properties</value>
			</list>
		</property>
		<property name="placeholderPrefix" value="@{" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>



	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<bean id="fmHtmlEscape" class="freemarker.template.utility.HtmlEscape" />

	<bean id="fmImgUrl" class="com.gudeng.framework.web.freemarker.MultiDomUrl">
		<property name="host" value="@{imgHost}" />
		<property name="imgHostTag" value="@{imgHostTag}" />
		<property name="imgHostNumber" value="@{imgHostNumber}" />
	</bean>

	<!-- ====================== i18n =============================== -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:i18n/messages" />
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器   by ysk-->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="10240000" />
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
 <!-- 拦截器 -->
	<mvc:interceptors>
<!-- 		<mvc:interceptor> -->
<!-- 			<mvc:mapping path="/**" /> -->
<!-- 			<bean class="com.gudeng.commerce.gd.notify.interceptor.SessionInterceptor"> -->
<!-- 			</bean> -->
<!-- 		</mvc:interceptor> -->
		<!-- xss防御 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.gudeng.commerce.gd.notify.interceptor.URLInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>
