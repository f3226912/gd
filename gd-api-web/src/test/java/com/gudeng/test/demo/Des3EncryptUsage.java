package com.gudeng.test.demo;

import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.gudeng.test.util.Des3;

public class Des3EncryptUsage {

	public static String getEncryptString(String plain) throws Exception{
		return Des3.encode(plain);
	}
	
	public static String getPlainString(String encryptString) throws Exception{
		return Des3.decode(encryptString);
	}
	public static void testEncode() throws Exception{
		
		Map map = new HashMap();
//		map.put("marketId", 1);
//		map.put("productId", 46951);
		map.put("userId", 8238);
		map.put("option", 1);
		map.put("businessId", 4950);
		Gson gson=new Gson();
		String requestData= getEncryptString(gson.toJson(map));
		System.out.print(requestData);
		//param=${requestData}
	}
	public static void testDecode() throws Exception{
		System.out.println(getPlainString("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 OvxOA7edSA=="));
	}
	public static void main(String[] args) throws Exception {
//		testEncode();
		testDecode();
	}
}
